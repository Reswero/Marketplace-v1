// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "security": [
                    {
                        "SessionId": []
                    }
                ],
                "description": "Помещение авторизационных данных в заголовки ответа",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "Авторизация",
                "operationId": "sessions-authorize",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.StatusResponse"
                        }
                    }
                }
            }
        },
        "/accounts/admins": {
            "post": {
                "security": [
                    {
                        "AccountId": []
                    },
                    {
                        "AccountType": []
                    }
                ],
                "description": "Создание аккаунта администратора",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Создание администратора",
                "operationId": "create-admin",
                "parameters": [
                    {
                        "description": "admin account",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/account.AdminAccountCreateVm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/account.AccountCreatedVm"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.StatusResponse"
                        }
                    }
                }
            }
        },
        "/accounts/customers": {
            "post": {
                "description": "Создание аккаунта покупателя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Создание покупателя",
                "operationId": "create-customer",
                "parameters": [
                    {
                        "description": "customer account",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/account.CustomerAccountCreateVm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/session.SessionVm"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.StatusResponse"
                        }
                    }
                }
            }
        },
        "/accounts/sellers": {
            "post": {
                "description": "Создание аккаунта продавца",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Создание продавца",
                "operationId": "create-seller",
                "parameters": [
                    {
                        "description": "seller account",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/account.SellerAccountCreateVm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/session.SessionVm"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.StatusResponse"
                        }
                    }
                }
            }
        },
        "/accounts/staffs": {
            "post": {
                "security": [
                    {
                        "AccountId": []
                    },
                    {
                        "AccountType": []
                    }
                ],
                "description": "Создание аккаунта персонала",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Создание персонала",
                "operationId": "create-staff",
                "parameters": [
                    {
                        "description": "staff account",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/account.StaffAccountCreateVm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/account.AccountCreatedVm"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.StatusResponse"
                        }
                    }
                }
            }
        },
        "/accounts/{id}": {
            "get": {
                "security": [
                    {
                        "AccountId": []
                    },
                    {
                        "AccountType": []
                    }
                ],
                "description": "Получение аккаунта пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Получение аккаунта",
                "operationId": "get-account",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "account id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/account.AccountVm"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.StatusResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.StatusResponse"
                        }
                    }
                }
            }
        },
        "/accounts/{id}/email": {
            "put": {
                "security": [
                    {
                        "AccountId": []
                    },
                    {
                        "AccountType": []
                    }
                ],
                "description": "Изменение почты аккаунта",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Изменение почты",
                "operationId": "change-account-email",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "account id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.StatusResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.StatusResponse"
                        }
                    }
                }
            }
        },
        "/accounts/{id}/password": {
            "put": {
                "security": [
                    {
                        "AccountId": []
                    },
                    {
                        "AccountType": []
                    }
                ],
                "description": "Изменение пароля аккаунта",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Изменение пароля",
                "operationId": "change-account-password",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "account id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.StatusResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.StatusResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Создание пользовательской сессии",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "Вход в аккаунт",
                "operationId": "sessions-login",
                "parameters": [
                    {
                        "description": "account credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/session.CredentialsVm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/session.SessionVm"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.StatusResponse"
                        }
                    }
                }
            }
        },
        "/logout": {
            "get": {
                "security": [
                    {
                        "SessionId": []
                    }
                ],
                "description": "Завершение пользовательской сессии",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "Выход из аккаунта",
                "operationId": "sessions-logout",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.StatusResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "account.AccountCreatedVm": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "account.AccountVm": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "phoneNumber": {
                    "type": "string"
                }
            }
        },
        "account.AdminAccountCreateVm": {
            "type": "object",
            "required": [
                "email",
                "firstName",
                "lastName",
                "password",
                "phoneNumber"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 2
                },
                "lastName": {
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 2
                },
                "password": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 6
                },
                "phoneNumber": {
                    "type": "string"
                }
            }
        },
        "account.CustomerAccountCreateVm": {
            "type": "object",
            "required": [
                "email",
                "firstName",
                "lastName",
                "password",
                "phoneNumber"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 2
                },
                "lastName": {
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 2
                },
                "password": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 6
                },
                "phoneNumber": {
                    "type": "string"
                }
            }
        },
        "account.SellerAccountCreateVm": {
            "type": "object",
            "required": [
                "companyName",
                "email",
                "firstName",
                "lastName",
                "password",
                "phoneNumber"
            ],
            "properties": {
                "companyName": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 6
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 2
                },
                "lastName": {
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 2
                },
                "password": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 6
                },
                "phoneNumber": {
                    "type": "string"
                }
            }
        },
        "account.StaffAccountCreateVm": {
            "type": "object",
            "required": [
                "email",
                "firstName",
                "lastName",
                "password",
                "phoneNumber"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 2
                },
                "lastName": {
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 2
                },
                "password": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 6
                },
                "phoneNumber": {
                    "type": "string"
                }
            }
        },
        "http.StatusResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "session.CredentialsVm": {
            "type": "object",
            "required": [
                "accountType",
                "password",
                "phoneNumber"
            ],
            "properties": {
                "accountType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                }
            }
        },
        "session.SessionVm": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "AccountId": {
            "type": "apiKey",
            "name": "X-Account-Id",
            "in": "header"
        },
        "AccountType": {
            "type": "apiKey",
            "name": "X-Account-Type",
            "in": "header"
        },
        "SessionId": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8085",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "Auth Service",
	Description:      "Сервис аутентификации, авторизации и регистрации пользователей",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
